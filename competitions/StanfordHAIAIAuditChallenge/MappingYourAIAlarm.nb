(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    190102,       4342]
NotebookOptionsPosition[    184126,       4238]
NotebookOutlinePosition[    184551,       4255]
CellTagsIndexPosition[    184508,       4252]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mapping Your AI Alarm", "Title",
 CellChangeTimes->{{3.870416494807392*^9, 
  3.8704165149389963`*^9}},ExpressionUUID->"bcd3c995-0cc1-4a17-bbbb-\
3a732f1bacde"],

Cell["\<\
Who alerts us to the failures of AI algorithms? This notebook will show you \
how to create your own alarm for the misbehaving of ensembles of noisy AI \
judges - binary classifiers.
The alarm will be based on the theorem that showed how you could evaluate \
error independent trios of binary classifiers. We call it \
\[OpenCurlyDoubleQuote]the independent trio \
evaluator\[CloseCurlyDoubleQuote]. It only works correctly near error \
independence. This notebook is about treating that \[OpenCurlyDoubleQuote]bug\
\[CloseCurlyDoubleQuote] as a \[OpenCurlyDoubleQuote]feature\
\[CloseCurlyDoubleQuote].
The notebook is organized as follows:

1. Alarms : we briefly talk about how all alarms have flaws. Proper safety \
engineering requires that they be evaluated in their application context.
2. Designing an alarm using the failures of the independent trio evaluator: \
Since algebraic evaluators can return out of bounds or imaginary numbers, we \
know they must be wrong in their assumptions. We can use this to design an AI \
alarm.
3. Mapping an AI alarm: We use the UCI Adult dataset to construct maps of the \
amount of error correlation that triggers the failure of the independent trio \
evaluator.

Another Mathematica notebook in the submission  - \[OpenCurlyDoubleQuote]An \
Enabling Technology\[CloseCurlyDoubleQuote] - shows how you can use these \
maps to create different applications such as AutoML, error-correction, \
fairness testing on unlabeled data, etc.\
\>", "Text",
 CellChangeTimes->{{3.870416560007392*^9, 3.870416687666049*^9}, {
  3.870416753673461*^9, 3.8704167843086433`*^9}, {3.87041688019711*^9, 
  3.8704179787978563`*^9}},ExpressionUUID->"4d69d43d-fca1-4c9f-b4de-\
bc7c9c8ddb12"],

Cell[CellGroupData[{

Cell["Alarms will fail, good engineers know when", "Section",
 CellChangeTimes->{{3.870418001104603*^9, 
  3.870418052742536*^9}},ExpressionUUID->"4bab144b-ae03-494f-a2f1-\
3c03b3de0382"],

Cell["\<\
  There is no perfect alarm. There cannot be one. No one will ever submit to \
competitions like Stanford HAI\[CloseCurlyQuote]s AI Audit Challenge the \
perfect tool to carry out its intended auditing task. Good safety engineering \
requires that we understand the failure properties of any proposed alarm.
  We take it as a given that the only safe AI systems of the future will be \
based on the use of ensemble methods in one way or another. Our independent \
trio evaluator is one such ensemble technique that can contribute to that \
future safety. But it fails. This notebook is about finding out where that \
happens.
  This is an exercise that cannot be carried out with probabilistic \
evaluators of noisy judges. By construction they will always return sensible \
answers - always real numbers. They never fail! We think that is a flaw for \
AI safety.\
\>", "Text",
 CellChangeTimes->{{3.870418067075*^9, 3.8704182117632*^9}, {
  3.8704182744912577`*^9, 3.87041836424615*^9}, {3.8704184370388107`*^9, 
  3.870418658446475*^9}},ExpressionUUID->"47e20420-19a1-48c0-81a7-\
e6f654abe6b7"]
}, Open  ]],

Cell["Algebraic numbers make AI alarms possible", "Section",
 CellChangeTimes->{{3.870418678928521*^9, 
  3.870418700103692*^9}},ExpressionUUID->"355e0a5d-d0da-4e0a-a36a-\
75ae1abe5b1c"],

Cell[CellGroupData[{

Cell["Initial look at the code and confirming it works", "Section",
 CellChangeTimes->{{3.870418735367992*^9, 3.8704187695502863`*^9}, {
  3.870596606676496*^9, 
  3.8705966396036253`*^9}},ExpressionUUID->"e4431d5b-799b-40cd-89da-\
495df9619242"],

Cell[CellGroupData[{

Cell["\<\
Getting the dataset and preparing it for training and testing\
\>", "Subsection",
 CellChangeTimes->{{3.8705054972327337`*^9, 
  3.8705055093265553`*^9}},ExpressionUUID->"d573a88a-7404-4d04-95b7-\
b9dbb019a0ef"],

Cell["\<\
Mathematica has powerful built-in functions to help us retrieve public \
datasets. Public datasets are an important part of the \
scientific/research/development eco-systems. They help promote transparency \
and reproducibility of research claims.The running example used throughout \
this submission is the UCI Adult Dataset. There are various reasons this \
dataset was chosen:\
\>", "Text",
 CellChangeTimes->{{3.8705055136516867`*^9, 3.8705056529319057`*^9}, 
   3.870505803852085*^9, 
   3.8705058409166203`*^9},ExpressionUUID->"944f58e9-dd54-4916-9bdd-\
8517d4750675"],

Cell["It is public.", "ItemNumbered",
 CellChangeTimes->{{3.87050566897493*^9, 3.8705057256623793`*^9}, {
  3.870505814426046*^9, 3.87050583186353*^9}, {3.870505924273933*^9, 
  3.870505928800699*^9}},ExpressionUUID->"0c11b4cb-8a6a-4df0-ae26-\
4b12bd7520d7"],

Cell["It is used to train and test binary classifiers.", "ItemNumbered",
 CellChangeTimes->{{3.87050566897493*^9, 3.8705057256623793`*^9}, {
  3.870505814426046*^9, 3.870505831240716*^9}, {3.8705058725592127`*^9, 
  3.870505896971167*^9}, {3.8705059330200663`*^9, 
  3.87050594447715*^9}},ExpressionUUID->"a90a9b2f-0c88-4b44-8121-\
a25ee238d3a5"],

Cell["\<\
It is used in the AI fairness research literature since it contains two \
sensitive attributes of concern to society - gender and age.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.87050566897493*^9, 3.8705057256623793`*^9}, {
  3.870505814426046*^9, 3.870505831240716*^9}, {3.8705058725592127`*^9, 
  3.870505894614092*^9}, {3.8705059592432117`*^9, 
  3.870506043439095*^9}},ExpressionUUID->"0f84da5b-d520-42d2-841b-\
614bea97ed08"],

Cell["\<\
Mathematica curates an extensive data repository. Perhaps we can find UCI \
Adult in it.\
\>", "Text",
 CellChangeTimes->{{3.87050620140694*^9, 
  3.870506238977919*^9}},ExpressionUUID->"70267c42-7d85-42d4-9a2b-\
f40a46f33d88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<UCI\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.87050616849463*^9, 3.870506175254813*^9}},
 CellLabel->
  "In[1966]:=",ExpressionUUID->"16efe054-a2db-4b9d-9b3e-ab2435b4ad6e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "Sample Data: UCI Letter", "ResourceType" -> "DataResource", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sample Data: UCI Letter", "UUID" -> 
           "658836ec-d7b0-43bb-a080-5a7ef51553bf", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Letter recognition dataset", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[56.162423999999994`, "Megabytes"], 
           "ContentElements" -> {
            "ColumnTypes", "Data", "Dataset", "TestData", "TrainingData"}|>], 
        "Description" -> "Letter recognition dataset", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/658836ec-d7b0-43bb-a080-5a7ef51553bf"]|>, <|
       "Name" -> "Gliders in 2D Cellular Automata", "ResourceType" -> 
        "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Gliders in 2D Cellular Automata", "UUID" -> 
           "3b4df66a-3d94-4bcd-a133-e0b5d0ae2d00", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "A 2D cellular automaton glider compilation by David Eppstein", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[196.24567199999998`, "Megabytes"], 
           "ContentElements" -> {"GliderDatabase"}|>], "Description" -> 
        "A 2D cellular automaton glider compilation by David Eppstein", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/3b4df66a-3d94-4bcd-a133-e0b5d0ae2d00"]|>, <|
       "Name" -> "Sample Data: Satellite", "ResourceType" -> "DataResource", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sample Data: Satellite", "UUID" -> 
           "ce6346ee-856e-458d-aef1-9e3184f7ca50", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Classify the type of land surface of a scene photographed by the \
Landsat MSS satellite given four digital images of the scene taken in \
different spectral bands", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
           Quantity[39.503296, "Megabytes"], 
           "ContentElements" -> {
            "ColumnTypes", "Data", "Dataset", "TestData", "TrainingData"}|>], 
        "Description" -> 
        "Classify the type of land surface of a scene photographed by the \
Landsat MSS satellite given four digital images of the scene taken in \
different spectral bands", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/ce6346ee-856e-458d-aef1-9e3184f7ca50"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[126.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[126.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 3, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Sample Data: UCI Letter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sample Data: UCI Letter\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Letter recognition dataset", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/658836ec-d7b0-43bb-a080-5a7ef51553bf"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Gliders in 2D Cellular Automata", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Gliders in 2D Cellular Automata\"", "\"\\\"\"", "\"]\""},
                  "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "A 2D cellular automaton glider compilation by David Eppstein", 
               
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/3b4df66a-3d94-4bcd-a133-e0b5d0ae2d00"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sample Data: Satellite", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sample Data: Satellite\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Classify the type of land surface of a scene photographed by \
the Landsat MSS satellite given four digital images of the scene taken in \
different spectral bands", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/ce6346ee-856e-458d-aef1-9e3184f7ca50"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1294., {91.2010498046875, 99.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1294., {91.2010498046875, 99.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8705061823976593`*^9},
 CellLabel->
  "Out[1966]=",ExpressionUUID->"9c4d3fa6-0fc8-4298-b7b3-66446be1bcc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<Adult\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8705062576643953`*^9, 3.870506260790091*^9}},
 CellLabel->
  "In[1967]:=",ExpressionUUID->"8fbe5811-9aa6-4f69-bfac-62aa9b38bd1f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "Sample Data: Time to AIDS Induction", "ResourceType" -> 
        "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sample Data: Time to AIDS Induction", "UUID" -> 
           "545ad035-b0ce-4c05-9432-1062d9e25a5d", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Time to AIDS in years for adults and children from 1978", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "ContentSize" -> Quantity[220.89600000000002`, "Kilobytes"], 
           "ContentElements" -> {"Content", "RawData"}|>], "Description" -> 
        "Time to AIDS in years for adults and children from 1978", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/545ad035-b0ce-4c05-9432-1062d9e25a5d"]|>, <|
       "Name" -> "Sample Data: Paracou Kimboto Trees", "ResourceType" -> 
        "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sample Data: Paracou Kimboto Trees", "UUID" -> 
           "7cfd182a-97e1-46d0-b59e-5bef45db5a0a", "ResourceType" -> 
           "DataResource", "Version" -> "1.1.0", "Description" -> 
           "Locations of Kimboto trees at Paracou in French Guiana, annotated \
with adult/juvenile marks", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "ContentElements" -> {
            "Annotations", "AnnotationsKeys", "Data", "Description", 
             "Dimension", "Locations", "LongDescription", "Name", 
             "ObservationRegion", "PointCount", "RegionScale", "Source"}|>], 
        "Description" -> 
        "Locations of Kimboto trees at Paracou in French Guiana, annotated \
with adult/juvenile marks", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/7cfd182a-97e1-46d0-b59e-5bef45db5a0a"]|>, <|
       "Name" -> "Sample Data: Fisher's Cats", "ResourceType" -> 
        "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sample Data: Fisher's Cats", "UUID" -> 
           "7627abc3-4b41-4d92-b961-e94d9f31d3c4", "ResourceType" -> 
           "DataResource", "Version" -> "1.1.0", "Description" -> 
           "The heart and body weights of samples of male and female cats \
used for digitalis experiments. The cats were all adult, over 2 kg body \
weight.", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "ContentSize" -> Quantity[139.768, "Kilobytes"], 
           "ContentElements" -> {"Content", "RawData"}|>], "Description" -> 
        "The heart and body weights of samples of male and female cats used \
for digitalis experiments. The cats were all adult, over 2 kg body weight.", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/7627abc3-4b41-4d92-b961-e94d9f31d3c4"]|>, <|
       "Name" -> "NYC After-School Jobs and Internships", "ResourceType" -> 
        "DataResource", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "NYC After-School Jobs and Internships", "UUID" -> 
           "f3af4775-6f11-4eb4-a5a5-3d82d7882a90", "ResourceType" -> 
           "DataResource", "Version" -> "1.0.0", "Description" -> 
           "Agencies in NYC offering after-school job and internship \
programs", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "ContentSize" -> Quantity[161.928, "Kilobytes"], 
           "ContentElements" -> {
            "ColumnDescriptions", "ColumnNames", "Dataset"}|>], "Description" -> 
        "Agencies in NYC offering after-school job and internship programs", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/f3af4775-6f11-4eb4-a5a5-3d82d7882a90"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[414.40000000000003`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[126.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[414.40000000000003`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[126.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["DataResource"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 4, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Sample Data: Time to AIDS Induction", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sample Data: Time to AIDS Induction\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Time to AIDS in years for adults and children from 1978", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/545ad035-b0ce-4c05-9432-1062d9e25a5d"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sample Data: Paracou Kimboto Trees", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sample Data: Paracou Kimboto Trees\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Locations of Kimboto trees at Paracou in French Guiana, \
annotated with adult/juvenile marks", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/7cfd182a-97e1-46d0-b59e-5bef45db5a0a"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sample Data: Fisher's Cats", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sample Data: Fisher's Cats\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "The heart and body weights of samples of male and female cats \
used for digitalis experiments. The cats were all adult, over 2 kg body \
weight.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/7627abc3-4b41-4d92-b961-e94d9f31d3c4"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NYC After-School Jobs and Internships", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DataResource", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{126., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"NYC After-School Jobs and Internships\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Agencies in NYC offering after-school job and internship \
programs", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/obj/resourcesystem/pu...", 
                URL[
                "https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/f3af4775-6f11-4eb4-a5a5-3d82d7882a90"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1361., {111.7010498046875, 120.2989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1361., {111.7010498046875, 120.2989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.870506263562256*^9},
 CellLabel->
  "Out[1967]=",ExpressionUUID->"cddf3201-0187-4ee8-8553-97c6fb30d22e"]
}, Open  ]],

Cell["\<\
The UPenn Dataset Repository is one place we can find the UCI Adult dataset \
and other ones like it. Let\[CloseCurlyQuote]s use that.\
\>", "Text",
 CellChangeTimes->{{3.870506291690304*^9, 
  3.870506345009391*^9}},ExpressionUUID->"eb1653cb-1d83-459c-be6f-\
902b95de04ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tsvHeader", ",", " ", "benchmarkData"}], "}"}], " ", "=", " ", 
   RowBox[{"ImportPennMLBenchmarksDataset", "[", "\"\<adult\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8705235525461493`*^9, 3.8705235571860437`*^9}, {
  3.870596259432252*^9, 3.870596283037717*^9}},
 CellLabel->
  "In[2146]:=",ExpressionUUID->"07259698-ce42-481a-baae-128f16fcde68"],

Cell[CellGroupData[{

Cell[BoxData["tsvHeader"], "Input",
 CellChangeTimes->{{3.870523583077188*^9, 3.8705235866731453`*^9}},
 CellLabel->
  "In[2147]:=",ExpressionUUID->"b1262ebf-6e0a-4983-8bcb-4a655a305a0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"age\"\>", ",", "\<\"workclass\"\>", ",", "\<\"fnlwgt\"\>", 
   ",", "\<\"education\"\>", ",", "\<\"education-num\"\>", 
   ",", "\<\"marital-status\"\>", ",", "\<\"occupation\"\>", 
   ",", "\<\"relationship\"\>", ",", "\<\"race\"\>", ",", "\<\"sex\"\>", 
   ",", "\<\"capital-gain\"\>", ",", "\<\"capital-loss\"\>", 
   ",", "\<\"hours-per-week\"\>", ",", "\<\"native-country\"\>", 
   ",", "\<\"target\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.870523588133562*^9, 3.870596289409478*^9},
 CellLabel->
  "Out[2147]=",ExpressionUUID->"b5f8624c-c1ab-4db8-a87e-eef518a24643"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Choosing features for the ensemble of classifiers.", "Subsection",
 CellChangeTimes->{{3.870596320850134*^9, 
  3.870596335726218*^9}},ExpressionUUID->"fda6bf1d-84e9-4f1e-a051-\
82460809eb2c"],

Cell["\<\
If we could always have classifiers independent on their testing sample \
errors, then AI safety would be easy to solve by the main theorem in \
TheCoreConcept.nb. The practical reality is that error correlated classifiers \
are a reality and should be planned for in any evaluator that claims to \
successfully monitor them.
The engineering approach taken in this notebook is that we can increase their \
error independence by training them on different features of the data. Here \
is a specific partition of the UCI feature set. We will use it to test some \
initial code.\
\>", "Text",
 CellChangeTimes->{{3.870596354789775*^9, 
  3.870596571586914*^9}},ExpressionUUID->"cb81a8b4-42dd-4e8c-8568-\
0fa33de9a218"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featurePartition", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "\"\<Nominal\>\""}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "\"\<Nominal\>\""}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "\"\<Nominal\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "\"\<Nominal\>\""}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "\"\<Numerical\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "\"\<Numerical\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "\"\<Numerical\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "\"\<Numerical\>\""}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[2148]:=",ExpressionUUID->"d163ad21-08bf-4528-a6f4-4cffa3d56ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preparing the benchmark data for training and tests", "Subsection",
 CellChangeTimes->{{3.870596675530126*^9, 
  3.870596712298141*^9}},ExpressionUUID->"db2c4d6c-490b-43d4-abe6-\
197b90b58627"],

Cell["\<\
Our choices for training and testing sizes. We train on 10K items, test on 18K\
\>", "Text",
 CellChangeTimes->{{3.870596752954116*^9, 
  3.870596825381761*^9}},ExpressionUUID->"2260482e-7fcf-414a-b230-\
43676631dd67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainTestSplit", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"0", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"benchmarkData", "[", "0", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "5000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "6000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}], ",", 
     RowBox[{"1", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"benchmarkData", "[", "1", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "5000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "12000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.870596773682116*^9, 3.8705967740664167`*^9}, {
  3.870596834656398*^9, 3.870596850406443*^9}},
 CellLabel->
  "In[2149]:=",ExpressionUUID->"16a01e0c-fd0d-4255-bf2c-4896149d4b8b"],

Cell["Let\[CloseCurlyQuote]s check our data sizes came out correctly.", "Text",
 CellChangeTimes->{{3.870596862584695*^9, 
  3.870596881570097*^9}},ExpressionUUID->"d6d8a322-9c65-49cb-a495-\
e15b8ffac15c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "trainTestSplit", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.870539566930275*^9, 3.870539584620282*^9}},
 CellLabel->
  "In[2150]:=",ExpressionUUID->"eca82dc6-16ef-4f45-85e4-181b8e9e6598"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5000", ",", "6000"}], "}"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5000", ",", "12000"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.870539579971526*^9, 3.870539585884845*^9}, 
   3.870596877355171*^9},
 CellLabel->
  "Out[2150]=",ExpressionUUID->"01ae76db-329c-48ea-a140-1e81bbe0eb54"]
}, Open  ]],

Cell["\<\
Looks good. Let\[CloseCurlyQuote]s put it all together with our 1st purely \
algebraic manipulation.\
\>", "Text",
 CellChangeTimes->{{3.870597036825437*^9, 
  3.870597079329335*^9}},ExpressionUUID->"20c42cb6-6cc5-4908-9fe9-\
22fefd404443"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A quick evaluation of four Nearest Neighbours classifiers.", \
"Subsection",
 CellChangeTimes->{{3.870596922692689*^9, 
  3.870596953130587*^9}},ExpressionUUID->"875d13c9-1906-4a1b-b81c-\
8de0a6356207"],

Cell["Our choices for the NearestNeighbors are illustrative.", "Text",
 CellChangeTimes->{{3.8705969579629803`*^9, 
  3.870596980658989*^9}},ExpressionUUID->"45d10ebc-4eec-4d25-8c14-\
bc3531357386"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"searchSet", "=", "benchmarkData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifierTypes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<NearestNeighbors\>\"", ",", 
       RowBox[{"\"\<NeighborsNumber\>\"", "\[Rule]", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], ",", 
       RowBox[{"\"\<DistributionSmoothing\>\"", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\"\<NearestMethod\>\"", "\[Rule]", "\"\<KDtree\>\""}]}], 
      "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersFeatures", "=", "featurePartition"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainTestSplit", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"0", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "0", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "5000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "6000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}], ",", 
     RowBox[{"1", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "1", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "6000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "12000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingIndices", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "5000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1250"}], "]"}], "&"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "6000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1500"}], "]"}], "&"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"First", "@", 
           RowBox[{"Transpose", "@", "features"}]}], "]"}], "]"}], "&"}], ",",
        "trainTestSplit", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"features", ",", "classifiersFeatures"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiers", " ", "=", " ", 
   RowBox[{"TrainClassifiersDisjoint", "[", 
    RowBox[{
    "classifiersData", ",", "classifierTypes", ",", "trainingIndices", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}], ")"}], "&"}], ",", 
       "classifiersFeatures"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"voteCountsByLabel", "=", 
  RowBox[{"LabelCounts", "[", 
   RowBox[{"classifiers", ",", "classifiersData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.87059699169269*^9, 3.870597002301887*^9}, 
   3.870597100342987*^9},
 CellLabel->
  "In[2151]:=",ExpressionUUID->"0b32af6c-fba8-40a1-bf76-86c62d3bd3f2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "1177"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1016"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "189"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1124"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "145"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "188"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "834"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "168"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "194"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "154"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "356"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "375"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "20"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "15"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "25"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "20"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "5973"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "298"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "1216"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1958"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "705"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "29"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "480"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "493"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "253"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "111"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "78"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "262"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "80"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "14"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "41"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "9"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8705971061257133`*^9},
 CellLabel->
  "Out[2158]=",ExpressionUUID->"1b7cfc7c-bbef-41d6-a615-32edebb2aacf"]
}, Open  ]],

Cell["\<\
The voteCountsByLabel data structure is used throughout this notebook. It \
allows us to benchmark the evaluation on unlabeled data. To do so, we need to \
have their voting frequencies broken down by true label.\
\>", "Text",
 CellChangeTimes->{{3.8705971197124023`*^9, 
  3.870597203729157*^9}},ExpressionUUID->"ec810a34-44c0-48c8-bf01-\
6a17ec33a41f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicallyEvaluateClassifiers", "[", 
  RowBox[{"classifiers", ",", "classifiersData"}], "]"}]], "Input",
 CellChangeTimes->{{3.870540996807411*^9, 3.87054101675978*^9}},
 CellLabel->
  "In[2159]:=",ExpressionUUID->"8f00375d-f9a9-4db2-aa43-39e18ef02601"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.3333333333333333`"}], ",", 
     
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "0.19083333333333333`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.5765`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", "0.13066666666666665`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "0.4855`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.9115`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.73275`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.8840833333333333`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", "0.8121666666666667`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.019317916666666667`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.011602222222222222`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.00068375`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.004162666666666667`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.014275916666666666`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.000228`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
      "0.011015041666666666`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.002508625`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.0012100833333333334`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      "0.0005212708333333333`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.004801541666666667`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.007726986111111111`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.001916498888888889`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.0007568306944444444`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.00006048`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.0010482451111111111`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      "0.00022748021527777777`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.00015677990277777778`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.00036314876388888887`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.0012883657430555555`"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.001335486622673331`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "55.52844064718155`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.9514815828540583`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.6512684650823004`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.6300423535016989`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.05059161489082783`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.8790727343459754`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.9986645133773265`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.0485184171459432`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "54.52844064718155`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.3699576464983011`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.3487315349176994`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.1209272656540246`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.9494083851091721`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.3083597979798934`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2358442835008899`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.9278725913410485`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.7826493824675287`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.8134930163258384`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.44163612321719337`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.7818624056568468`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.6916402020201066`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.0721274086589515`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.7641557164991102`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.18650698367416163`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", 
          "0.21735061753247137`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.21813759434315314`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.5583638767828066`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
          RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
           RowBox[{"1.6863880910258169`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.04503265290890771`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.0230013656450257`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.9549673470910923`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.0230013656450257`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.0591685120139723`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.01828310507157661`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.9408314879860277`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.01828310507157661`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.3795196370591113`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.027414828767947052`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.6204803629408887`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.027414828767947052`", " ", "\[ImaginaryI]"}]}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
          RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.6863880910258169`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.04503265290890771`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.0230013656450257`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.9549673470910923`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.0230013656450257`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.0591685120139723`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.01828310507157661`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.9408314879860277`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.01828310507157661`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"0.3795196370591113`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.027414828767947052`", " ", "\[ImaginaryI]"}]}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"0.6204803629408887`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.027414828767947052`", " ", "\[ImaginaryI]"}]}]}]}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
          RowBox[{"-", "0.001290927542397867`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.06412297670999362`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.6300614524100098`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.053989762272678606`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.879252845622793`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "72.26529175235936`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.6201455535289582`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "1.0012909275423978`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.3699385475899902`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.9358770232900063`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.12074715437720694`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.9460102377273213`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.3798544464710411`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "71.26529175235936`"}]}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.870541019458707*^9, 3.870541046852425*^9}, 
   3.870597221825469*^9},
 CellLabel->
  "Out[2159]=",ExpressionUUID->"1215dd46-7518-469a-8975-e8476aa8913c"]
}, Open  ]],

Cell["\<\
We immediately see that the algebraic evaluator is emitting non-sense \
answers. It has failed. This means that these classifiers are not independent \
in their error. How correlated are they?\
\>", "Text",
 CellChangeTimes->{{3.870597237601141*^9, 
  3.870597307557445*^9}},ExpressionUUID->"eebcc127-e626-49bc-857e-\
ad703288ae40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GTClassifiers", "[", "voteCountsByLabel", "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.8705973412084723`*^9, 3.870597348988909*^9}, {
  3.870597386019496*^9, 3.870597393572618*^9}},
 CellLabel->
  "In[2162]:=",ExpressionUUID->"a7933fb4-ddde-4558-a8ba-799858b0fd8c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.3333333333333333`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "0.19083333333333333`"}], 
   ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.5765`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", "0.13066666666666665`"}], 
   ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "0.4855`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.9115`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.73275`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.8840833333333333`"}], ",", 
   
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", "0.8121666666666667`"}], ",", 
   
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.019317916666666667`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", "0.011602222222222222`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.00068375`"}], 
   ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", "0.004162666666666667`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.014275916666666666`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.000228`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
    "0.011015041666666666`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", "0.002508625`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    "0.0012100833333333334`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    "0.0005212708333333333`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    "0.004801541666666667`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    "0.007726986111111111`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", "0.001916498888888889`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.0007568306944444444`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.00006048`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", "0.0010482451111111111`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    "0.00022748021527777777`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", "0.00015677990277777778`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    "0.00036314876388888887`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
    "0.0012883657430555555`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8705973509863234`*^9, {3.8705973888810453`*^9, 3.870597394740735*^9}},
 CellLabel->
  "Out[2162]=",ExpressionUUID->"183e010a-af8f-4e03-a58f-e2c3ffe4a657"]
}, Open  ]],

Cell["\<\
The \[CapitalGamma] expressions are our notation for the sample error \
correlation of the classifiers. Here we see that these NNs classifiers were \
at most 1.9% pair correlated but the evaluation failed. Will more testing \
data fix this?\
\>", "Text",
 CellChangeTimes->{{3.870597462898096*^9, 
  3.870597579941136*^9}},ExpressionUUID->"70ca8887-e447-4f0a-acf4-\
95c519ae8ae1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"searchSet", "=", "benchmarkData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifierTypes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<NearestNeighbors\>\"", ",", 
       RowBox[{"\"\<NeighborsNumber\>\"", "\[Rule]", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], ",", 
       RowBox[{"\"\<DistributionSmoothing\>\"", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\"\<NearestMethod\>\"", "\[Rule]", "\"\<KDtree\>\""}]}], 
      "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersFeatures", "=", "featurePartition"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainTestSplit", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"0", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "0", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "5000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "8000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}], ",", 
     RowBox[{"1", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "1", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "6000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "12000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingIndices", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "5000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1250"}], "]"}], "&"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "6000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1500"}], "]"}], "&"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"First", "@", 
           RowBox[{"Transpose", "@", "features"}]}], "]"}], "]"}], "&"}], ",",
        "trainTestSplit", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"features", ",", "classifiersFeatures"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiers", " ", "=", " ", 
   RowBox[{"TrainClassifiersDisjoint", "[", 
    RowBox[{
    "classifiersData", ",", "classifierTypes", ",", "trainingIndices", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}], ")"}], "&"}], ",", 
       "classifiersFeatures"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"voteCountsByLabel", "=", 
  RowBox[{"LabelCounts", "[", 
   RowBox[{"classifiers", ",", "classifiersData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.870597600503722*^9, 3.870597614330943*^9}, {
  3.870597699283499*^9, 3.8705977108077793`*^9}},
 CellLabel->
  "In[2171]:=",ExpressionUUID->"311a1a8a-7a47-40aa-a2f3-29c03a4b8161"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1147"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "319"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "171"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1674"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "473"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "233"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "1023"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "535"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "444"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "1163"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "493"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "38"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "212"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "23"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "26"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "26"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "6259"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "834"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "1059"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "813"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "242"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "1438"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "92"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "192"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "239"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "54"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "26"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "66"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "292"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "288"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "93"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "13"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.870597632272523*^9, 3.870597714806507*^9},
 CellLabel->
  "Out[2178]=",ExpressionUUID->"0b484a1c-1e6a-482b-bb1c-73beb6743dbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicallyEvaluateClassifiers", "[", 
  RowBox[{"classifiers", ",", "classifiersData"}], "]"}]], "Input",
 CellLabel->
  "In[2179]:=",ExpressionUUID->"b6d773fc-b563-4a5a-9171-2d7e9923e2c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.4`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "0.25725`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.446375`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", "0.131`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "0.447`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.8630833333333333`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.797`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.8751666666666666`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", "0.8311666666666667`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.01242003125`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.01957475`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.00825925`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.004100125`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.014595375`"}],
      ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.001932`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
      "0.009872583333333334`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.0016750972222222221`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.007800569444444444`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      "0.0017421666666666666`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.004060166666666667`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.007840638888888888`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.0003773138125`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.0005528670625`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.00077382975`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.000730222625`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.0009827908611111111`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.0003345243611111111`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.001400132449074074`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.00008772994444444444`"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.05278186534609565`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "3.630234064060021`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "1.0069260979113566`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.3936961649391088`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.7048515312293304`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.08220654777243551`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.8701872561700525`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.9472181346539043`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"-", "0.006926097911356494`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "2.630234064060021`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.29514846877066947`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.6063038350608912`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.12981274382994742`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.9177934522275644`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.37981058394902784`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.32330158793542585`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.8996167404935509`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.512006104812078`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.8292704460839186`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.4692828468490537`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.8357575842722428`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.6201894160509721`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.10038325950644919`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.6766984120645742`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.1707295539160814`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.487993895187922`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.1642424157277571`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.5307171531509463`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
          RowBox[{"-", "0.12110455060287134`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"-", "0.35859078813315953`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.8736754536616171`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"-", "0.02011248402918857`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.888623869564179`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.5528521713547696`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.6904366202285824`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "1.1211045506028712`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.12632454633838278`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "1.3585907881331594`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.11137613043582083`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "1.0201124840291886`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.30956337977141746`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.44714782864523034`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
          RowBox[{"-", "0.01624888494378378`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.0125572646988869`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.7042515411311603`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.0763268600639767`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.8735150136234486`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "5.609176563924306`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.6346929673264927`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "1.0162488849437838`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2957484588688397`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.9874427353011129`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.1264849863765512`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.9236731399360233`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.36530703267350734`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "4.609176563924306`"}]}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.870597734571988*^9},
 CellLabel->
  "Out[2179]=",ExpressionUUID->"2688fad9-0231-47ef-85c9-cc9b3f1b0bb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using separate algorithms for training", "Subsection",
 CellChangeTimes->{{3.870597827714245*^9, 
  3.8705978375192966`*^9}},ExpressionUUID->"6a872611-5ee0-43fb-870d-\
60db306314eb"],

Cell["\<\
Increasing the test data made the evaluator get closer to returning sensible \
answers.
Would using different algorithms improve the algebraic estimates?\
\>", "Text",
 CellChangeTimes->{{3.870597854204214*^9, 
  3.870597891596547*^9}},ExpressionUUID->"53377a47-e04a-4671-9df7-\
1544640c52f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"searchSet", "=", "benchmarkData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifierTypes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NearestNeighbors\>\"", ",", "\"\<NeuralNetwork\>\"", ",", " ", 
     "\"\<SupportVectorMachine\>\"", ",", "\"\<LogisticRegression\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersFeatures", "=", "featurePartition"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainTestSplit", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"0", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "0", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "5000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "8000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}], ",", 
     RowBox[{"1", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"searchSet", "[", "1", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", "6000"}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "12000"}]}], "]"}]}], "}"}], "&"}]}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingIndices", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "5000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1250"}], "]"}], "&"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "6000"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "1500"}], "]"}], "&"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiersData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"First", "@", 
           RowBox[{"Transpose", "@", "features"}]}], "]"}], "]"}], "&"}], ",",
        "trainTestSplit", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"features", ",", "classifiersFeatures"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classifiers", " ", "=", " ", 
   RowBox[{"TrainClassifiersDisjoint", "[", 
    RowBox[{
    "classifiersData", ",", "classifierTypes", ",", "trainingIndices", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}], ")"}], "&"}], ",", 
       "classifiersFeatures"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"voteCountsByLabel", "=", 
  RowBox[{"LabelCounts", "[", 
   RowBox[{"classifiers", ",", "classifiersData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.870597600503722*^9, 3.870597614330943*^9}, {
  3.870597699283499*^9, 3.8705977108077793`*^9}, {3.87059790105576*^9, 
  3.8705979486865053`*^9}},
 CellLabel->
  "In[2188]:=",ExpressionUUID->"7602aba2-fca9-4e9f-89c3-8e06a0cf6d50"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "163"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "228"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "1482"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "1143"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "98"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "182"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "796"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "339"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "440"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "103"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "1683"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "534"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "418"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "93"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "190"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "108"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "3357"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "778"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "978"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "1638"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "2077"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       "528"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "447"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "105"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "187"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "426"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "581"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "338"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "72"}],
       ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       "207"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       "192"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       "89"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.87059795174716*^9, 3.870598225029025*^9},
 CellLabel->
  "Out[2195]=",ExpressionUUID->"4fd6e2ef-65cd-48ab-bce2-550192fa88d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicallyEvaluateClassifiers", "[", 
  RowBox[{"classifiers", ",", "classifiersData"}], "]"}]], "Input",
 CellLabel->
  "In[2196]:=",ExpressionUUID->"aa223cc3-a32d-403d-a92f-e8414a2d0edd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.4`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "0.70725`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.567625`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", "0.854375`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", "0.404`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.5429166666666667`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.784`"}], ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.6643333333333333`"}], 
     ",", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", "0.8324166666666667`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.00407778125`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.03374328125`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.011354`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.012714609375`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", "0.0089295`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      RowBox[{"-", "0.0081675`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.00448`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      "0.06457236111111112`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.008599548611111112`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.0035873333333333334`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", "0.001552`"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.025331194444444444`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.0035816118359375`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.002839925375`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.000100038125`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Alpha]"}]], "\[Rule]", 
      "0.001342935625`"}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.00030549694444444446`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "2", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.00010338`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"1", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      RowBox[{"-", "0.0007749483564814815`"}]}], ",", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"2", ",", "3", ",", "4", ",", "\[Beta]"}]], "\[Rule]", 
      "0.0013751107222222223`"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.475335932381136`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.7628246972282188`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.6291874681210362`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.4467684966680582`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.7249956896560635`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.9906390548895818`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.8622667995564194`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.5246640676188641`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.3708125318789639`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.2371753027717812`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.27500431034393635`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.5532315033319418`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.13773320044358076`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          "0.009360945110418422`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.16669171339918104`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.6813439752608704`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          "0.46769327452753023`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "1.0325855527545826`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.7785614904505417`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.44300890791171305`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.7740283048699595`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.833308286600819`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.5323067254724698`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.3186560247391296`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.22143850954945826`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "0.03258555275458272`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2259716951300403`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.5569910920882869`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.3696617828274577`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.4328723568816193`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
          "0.36996738893635917`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          RowBox[{"-", "0.6009360348319497`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
          RowBox[{"-", "0.2140991378153393`"}]}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.20050117273616036`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.7016960515724452`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.6303382171725422`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.6300326110636408`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.5671276431183807`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "1.2140991378153394`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "1.6009360348319497`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2983039484275548`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.7994988272638396`"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.4735312298158095`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2016829462411238`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.5039652089103026`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.2810299206544099`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.2210866450558701`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.08670616348943598`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.5800474096632827`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.5264687701841906`"}], 
         ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.49603479108969745`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.7983170537588763`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.7789133549441299`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.7189700793455902`"}],
          ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Alpha]"}]], "\[Rule]", 
          "0.4199525903367173`"}], ",", 
         RowBox[{
          SubscriptBox["P", 
           RowBox[{"4", ",", "\[Beta]"}]], "\[Rule]", 
          "0.913293836510564`"}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8705982478088093`*^9},
 CellLabel->
  "Out[2196]=",ExpressionUUID->"1e513c49-4aa5-4e8e-ac27-febbc641e375"]
}, Open  ]],

Cell["\<\
We now have two of the four trios returning sensible answers. This is for \
classifiers that can be up to 3% error correlated as seen it the top of the \
output. This is now an operating point at the borderline of failure for the \
algebraic evaluator based on them being error independent. The rest of this \
notebook is about automating this exploration to make a map of what \
correlation values make the evaluator fail.\
\>", "Text",
 CellChangeTimes->{{3.870598284188149*^9, 3.870598307679564*^9}, {
  3.870598339942547*^9, 
  3.87059847447157*^9}},ExpressionUUID->"6307e741-68e2-48f8-bdc1-\
8ccefea09978"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1233, 888},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"84f4330e-9943-42be-868a-8c13e28e01c9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 166, 3, 146, "Title",ExpressionUUID->"bcd3c995-0cc1-4a17-bbbb-3a732f1bacde"],
Cell[749, 27, 1726, 31, 605, "Text",ExpressionUUID->"4d69d43d-fca1-4c9f-b4de-bc7c9c8ddb12"],
Cell[CellGroupData[{
Cell[2500, 62, 187, 3, 101, "Section",ExpressionUUID->"4bab144b-ae03-494f-a2f1-3c03b3de0382"],
Cell[2690, 67, 1106, 18, 295, "Text",ExpressionUUID->"47e20420-19a1-48c0-81a7-e6f654abe6b7"]
}, Open  ]],
Cell[3811, 88, 186, 3, 101, "Section",ExpressionUUID->"355e0a5d-d0da-4e0a-a36a-75ae1abe5b1c"],
Cell[CellGroupData[{
Cell[4022, 95, 246, 4, 78, "Section",ExpressionUUID->"e4431d5b-799b-40cd-89da-495df9619242"],
Cell[CellGroupData[{
Cell[4293, 103, 221, 5, 81, "Subsection",ExpressionUUID->"d573a88a-7404-4d04-95b7-b9dbb019a0ef"],
Cell[4517, 110, 584, 11, 191, "Text",ExpressionUUID->"944f58e9-dd54-4916-9bdd-8517d4750675"],
Cell[5104, 123, 258, 4, 48, "ItemNumbered",ExpressionUUID->"0c11b4cb-8a6a-4df0-ae26-4b12bd7520d7"],
Cell[5365, 129, 346, 5, 48, "ItemNumbered",ExpressionUUID->"a90a9b2f-0c88-4b44-8121-a25ee238d3a5"],
Cell[5714, 136, 441, 8, 80, "ItemNumbered",ExpressionUUID->"0f84da5b-d520-42d2-841b-614bea97ed08"],
Cell[6158, 146, 237, 6, 53, "Text",ExpressionUUID->"70267c42-7d85-42d4-9a2b-f40a46f33d88"],
Cell[CellGroupData[{
Cell[6420, 156, 226, 4, 63, "Input",ExpressionUUID->"16efe054-a2db-4b9d-9b3e-ab2435b4ad6e"],
Cell[6649, 162, 46144, 845, 236, "Output",ExpressionUUID->"9c4d3fa6-0fc8-4298-b7b3-66446be1bcc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52830, 1012, 231, 4, 63, "Input",ExpressionUUID->"8fbe5811-9aa6-4f69-bfac-62aa9b38bd1f"],
Cell[53064, 1018, 50895, 935, 278, "Output",ExpressionUUID->"cddf3201-0187-4ee8-8553-97c6fb30d22e"]
}, Open  ]],
Cell[103974, 1956, 284, 6, 88, "Text",ExpressionUUID->"eb1653cb-1d83-459c-be6f-902b95de04ec"],
Cell[104261, 1964, 426, 10, 63, "Input",ExpressionUUID->"07259698-ce42-481a-baae-128f16fcde68"],
Cell[CellGroupData[{
Cell[104712, 1978, 187, 3, 63, "Input",ExpressionUUID->"b1262ebf-6e0a-4983-8bcb-4a655a305a0a"],
Cell[104902, 1983, 621, 11, 132, "Output",ExpressionUUID->"b5f8624c-c1ab-4db8-a87e-eef518a24643"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[105572, 2000, 198, 3, 55, "Subsection",ExpressionUUID->"fda6bf1d-84e9-4f1e-a051-82460809eb2c"],
Cell[105773, 2005, 725, 13, 226, "Text",ExpressionUUID->"cb81a8b4-42dd-4e8c-8568-0fa33de9a218"],
Cell[106501, 2020, 1435, 41, 157, "Input",ExpressionUUID->"d163ad21-08bf-4528-a6f4-4cffa3d56ae8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107973, 2066, 199, 3, 81, "Subsection",ExpressionUUID->"db2c4d6c-490b-43d4-abe6-197b90b58627"],
Cell[108175, 2071, 228, 5, 53, "Text",ExpressionUUID->"2260482e-7fcf-414a-b230-43676631dd67"],
Cell[108406, 2078, 1233, 35, 126, "Input",ExpressionUUID->"16a01e0c-fd0d-4255-bf2c-4896149d4b8b"],
Cell[109642, 2115, 205, 3, 53, "Text",ExpressionUUID->"d6d8a322-9c65-49cb-a495-e15b8ffac15c"],
Cell[CellGroupData[{
Cell[109872, 2122, 281, 6, 63, "Input",ExpressionUUID->"eca82dc6-16ef-4f45-85e4-181b8e9e6598"],
Cell[110156, 2130, 462, 13, 69, "Output",ExpressionUUID->"01ae76db-329c-48ea-a140-1e81bbe0eb54"]
}, Open  ]],
Cell[110633, 2146, 250, 6, 53, "Text",ExpressionUUID->"20c42cb6-6cc5-4908-9fe9-22fefd404443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110920, 2157, 208, 4, 81, "Subsection",ExpressionUUID->"875d13c9-1906-4a1b-b81c-8de0a6356207"],
Cell[111131, 2163, 198, 3, 53, "Text",ExpressionUUID->"45d10ebc-4eec-4d25-8c14-bc3531357386"],
Cell[CellGroupData[{
Cell[111354, 2170, 3714, 105, 529, "Input",ExpressionUUID->"0b32af6c-fba8-40a1-bf76-86c62d3bd3f2"],
Cell[115071, 2277, 4578, 140, 287, "Output",ExpressionUUID->"1b7cfc7c-bbef-41d6-a615-32edebb2aacf"]
}, Open  ]],
Cell[119664, 2420, 364, 7, 88, "Text",ExpressionUUID->"ec810a34-44c0-48c8-bf01-6a17ec33a41f"],
Cell[CellGroupData[{
Cell[120053, 2431, 281, 5, 63, "Input",ExpressionUUID->"8f00375d-f9a9-4db2-aa43-39e18ef02601"],
Cell[120337, 2438, 14393, 378, 754, "Output",ExpressionUUID->"1215dd46-7518-469a-8975-e8476aa8913c"]
}, Open  ]],
Cell[134745, 2819, 342, 7, 88, "Text",ExpressionUUID->"eebcc127-e626-49bc-857e-ad703288ae40"],
Cell[CellGroupData[{
Cell[135112, 2830, 310, 7, 63, "Input",ExpressionUUID->"a7933fb4-ddde-4558-a8ba-799858b0fd8c"],
Cell[135425, 2839, 4287, 115, 271, "Output",ExpressionUUID->"183e010a-af8f-4e03-a58f-e2c3ffe4a657"]
}, Open  ]],
Cell[139727, 2957, 390, 8, 88, "Text",ExpressionUUID->"70ca8887-e447-4f0a-acf4-95c519ae8ae1"],
Cell[CellGroupData[{
Cell[140142, 2969, 3740, 105, 529, "Input",ExpressionUUID->"311a1a8a-7a47-40aa-a2f3-29c03a4b8161"],
Cell[143885, 3076, 4600, 140, 287, "Output",ExpressionUUID->"0b484a1c-1e6a-482b-bb1c-73beb6743dbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148522, 3221, 216, 4, 63, "Input",ExpressionUUID->"b6d773fc-b563-4a5a-9171-2d7e9923e2c9"],
Cell[148741, 3227, 12928, 359, 690, "Output",ExpressionUUID->"2688fad9-0231-47ef-85c9-cc9b3f1b0bb0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161718, 3592, 188, 3, 81, "Subsection",ExpressionUUID->"6a872611-5ee0-43fb-870d-60db306314eb"],
Cell[161909, 3597, 303, 7, 88, "Text",ExpressionUUID->"53377a47-e04a-4671-9df7-1544640c52f0"],
Cell[CellGroupData[{
Cell[162237, 3608, 3485, 99, 498, "Input",ExpressionUUID->"7602aba2-fca9-4e9f-89c3-8e06a0cf6d50"],
Cell[165725, 3709, 4609, 140, 287, "Output",ExpressionUUID->"4fd6e2ef-65cd-48ab-bce2-550192fa88d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170371, 3854, 216, 4, 63, "Input",ExpressionUUID->"aa223cc3-a32d-403d-a92f-e8414a2d0edd"],
Cell[170590, 3860, 12860, 359, 690, "Output",ExpressionUUID->"1e513c49-4aa5-4e8e-ac27-febbc641e375"]
}, Open  ]],
Cell[183465, 4222, 621, 11, 157, "Text",ExpressionUUID->"6307e741-68e2-48f8-bdc1-8ccefea09978"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

